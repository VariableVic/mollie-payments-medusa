name: Release and Publish Package
on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install --immutable

      - name: Generate package-lock.json
        run: npm install --package-lock-only --legacy-peer-deps

      - name: Build package
        run: yarn build

      - name: Get version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Check version change
        id: check-version
        run: |
          git fetch
          PREV_VERSION=$(git show origin/main:package.json | grep '"version"' | cut -d'"' -f4)
          CURRENT_VERSION=${{ steps.package-version.outputs.current-version }}
          if [ "$PREV_VERSION" != "$CURRENT_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "prev_version=$PREV_VERSION" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        if: steps.check-version.outputs.version_changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}
          release_name: Release v${{ steps.package-version.outputs.current-version }}
          draft: false
          prerelease: false

      - name: Publish to npm
        if: steps.check-version.outputs.version_changed == 'true'
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
